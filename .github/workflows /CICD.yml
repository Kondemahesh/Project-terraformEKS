name: Deploy on EKS

on:
  push:
    branches: [ "main" ]
jobs:
  compile:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
      working-directory: ./springboot-eks
      
  security-check:  
    runs-on: ubuntu-latest
    needs: compile
   
    steps:
      - uses: actions/checkout@v4
      - name: Trivy Installation
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy

      - name: Trivy FS Scan
        run: trivy fs --format table -o fs-report.json .
  test: 
    runs-on: ubuntu-latest
    needs: security-check
    
    steps: 
    - uses: actions/checkout@v4
    - name: setup JDK 17
      uses: actions/setup-java@v4
      with: 
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: unit test cases
      run: mvn test
 
  Build-artifactory: 
     runs-on: ubuntu-latest
     needs: test
     
     steps: 
     - uses: actions/checkout@v4
     - name: setup JDK 17
       uses: actions/setup-java@v4
       with: 
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
             
     - name: Build Project
       run: mvn package
       working-directory: ./springboot-eks
     - name: upload JAR artifact
       uses: actions/upload-artifact@v4
       with:
         name: app-jar
         path: springboot-eks/target/*.jar

  buils_docker_image_and_push:
    runs-on: ubuntu-latest
    needs: Build-artifactory
    defaults:
       run:
         working-directory: ./springboot-eks
    steps:
    - uses: actions/checkout@v4
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target  # this will download JAR to ./app folder
    - name: Show working directory
      run: pwd        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: kondemahesh/bankapp:latest
        file: ./springboot-eks/Dockerfile

  deploy_to_kubernetes:
    runs-on: ubuntu-latest
    needs: buils_docker_image_and_push
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.REGION }}
    - name: Install kubectl v1.29.0
      run: |
           curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
           chmod +x kubectl
           sudo mv kubectl /usr/local/bin/
           kubectl version --client
    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region us-east-1 --name dev-eks-cluster
    - name: configure kube config
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.EKS_KUBECONFIG }}" > $HOME/.kube/config
    - name: Deploy to EKS
      run: | 
         kubectl apply -f k8s.yaml/
         

